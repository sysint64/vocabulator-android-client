import org.yaml.snakeyaml.Yaml

apply plugin: 'com.android.application'

apply plugin: 'com.google.protobuf'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 27

    def version = new Yaml().load(file("version.yml").newInputStream())
    def host = new Yaml().load(file("host.yml").newInputStream())

    def mVersionName = "v${version.major_version}.${version.minor_version}.${version.version_patch}"

    // Rename apk file
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (output.outputFile != null && output.outputFile.name.endsWith('.apk')) {
                outputFileName = "Vocabulator-${mVersionName} (${version.version_number}) - ${variant.buildType.name.capitalize()}.apk"
            }
        }
    }

    defaultConfig {
        applicationId "ru.kabylin.andrey.vocabulator"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode version.version_number.toInteger()
        versionName "${mVersionName}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())

        def apiEndpoint = properties.getOrDefault('api.endpoint', '"http://192.168.0.100:8080/api/"')
        buildConfigField("String", "API_ENDPOINT", apiEndpoint)

        def grpcEndpoint = properties.getOrDefault('grpc.endpoint', '"192.168.0.100"')
        def grpcPort = properties.getOrDefault('grpc.port', '50051')

        buildConfigField("String", "GRPC_ENDPOINT", grpcEndpoint)
        buildConfigField("Integer", "GRPC_PORT", grpcPort)
    }
    buildTypes {
        debug {
            buildConfigField("String", "API_ENDPOINT", "\"${host.api.debug.endpoint}\"")
            versionNameSuffix = " Build: ${version.version_number} - Debug"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "tier"
    productFlavors {
        local {
            dimension "tier"
        }
        http {
            dimension "tier"
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

def support_lib_version = "27.1.1"
def retrofit_version = "2.3.0"
def anko_version = "0.10.3"
def lifecycle_version = "1.1.1"
def room_version = "1.1.1"
def grpc_version = "1.14.0"

protobuf {
    protoc { artifact = 'com.google.protobuf:protoc:3.5.1-1' }
    plugins {
        javalite { artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0" }
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpc_version" // CURRENT_GRPC_VERSION
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                javalite {}
                grpc { // Options added to --grpc_out
                    option 'lite'
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$support_lib_version"
    implementation "com.android.support.constraint:constraint-layout:1.1.2"
    implementation "com.android.support:design:$support_lib_version"
    implementation "com.android.support:cardview-v7:$support_lib_version"

    // Core
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:3.9.0"

    implementation "io.reactivex.rxjava2:rxkotlin:2.1.0"
    implementation "io.reactivex.rxjava2:rxjava:2.1.9"
    implementation "io.reactivex.rxjava2:rxandroid:2.0.1"

    implementation "org.kodein.di:kodein-di-generic-jvm:5.0.0"
    implementation "org.kodein.di:kodein-di-framework-android:5.0.0"

    implementation "com.chibatching.kotpref:kotpref:2.5.0"
    implementation "com.chibatching.kotpref:enum-support:2.5.0"
    implementation 'com.chibatching.kotpref:gson-support:2.5.0'

    implementation "io.grpc:grpc-okhttp:$grpc_version"
    implementation "io.grpc:grpc-protobuf-lite:$grpc_version"
    implementation "io.grpc:grpc-stub:$grpc_version"
    implementation "javax.annotation:javax.annotation-api:1.2"

    // Architecture Components
    implementation "android.arch.lifecycle:runtime:$lifecycle_version"
    kapt "android.arch.lifecycle:compiler:$lifecycle_version"

    implementation "android.arch.persistence.room:runtime:$room_version"
    implementation "android.arch.persistence.room:rxjava2:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"

    implementation "org.jetbrains.anko:anko-commons:$anko_version"

    // Social media
    implementation "com.vk:androidsdk:1.6.9"
    implementation 'com.facebook.android:facebook-login:4.35.0'
    implementation 'com.google.android.gms:play-services-auth:15.0.1'

    // Appearance
    implementation 'com.github.bumptech.glide:glide:4.7.1'

    // Test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    testImplementation "com.rubylichtenstein:rxtest:1.0.5"
    testImplementation "org.robolectric:robolectric:3.6.1"
    testImplementation "io.mockk:mockk:1.7.15"
    testImplementation "android.arch.persistence.room:testing:$room_version"
}
